#!/bin/zsh

#============================================
# General
#============================================
alias ..='cd ..'
alias cd..='cd ..'
alias c='clear'
alias dots='cd ~/.dotfiles'
alias ll='lm -a'
alias lm='ls -GlhF --color --group-directories-first'
alias ls='gls'
alias nix-shell='nix-shell --run zsh'
alias ovim='/usr/local/bin/vim'
alias serve='python ~/.dotfiles/scripts/python-server.py'
alias src='source ~/.zshenv'
alias ssh='TERM=xterm-256color ssh'
alias tml='tmux new-session -s Tomdizzle1'
alias tmn='tmux attach || tmux -u new -s Tom'
alias tmr='tmux attach -t Tomdizzle2 || tmux new-session -t Tomdizzle1 -s Tomdizzle2'
alias tmux='tmux -u -2'
alias v='nvim'
alias vend='cd $SOURCE_DIR'
alias vim='nvim'


#============================================
# "Speed-dial"
#============================================

alias code='cd ~/Code'
alias notes='cd ~/Notes/'
alias toml='cd ~/Code/toml'
alias work='cd ~/Code/work'

#============================================
# AWS
#============================================
alias aws-docker-login='$(aws ecr get-login --no-include-email --region ap-southeast-2)'


#============================================
# Git
#============================================
alias gita='git add'
alias gitaa='git add -A'
alias gitb='git rev-parse --abbrev-ref HEAD'
alias gitls='git branch'
alias gitc='git commit -m'
alias gitco='git checkout'
alias gitca='git commit --amend'
alias gitcb='git checkout -b'
alias gitd='git diff'
alias gitdc='git diff --cached'
alias gitdw='git diff -w'
alias gitl1='git lg1'
alias gitl2='git lg2'
alias gitl='git log --oneline'
alias gitlb='git branch --sort=-committerdate'
alias gitp='git push'
alias gitpb='git push -u origin $(gitb)'
alias gitpl='git pull --rebase'
alias gitpt='git push --follow-tags'
alias gitra='git rebase --abort'
alias gitrc='git rebase --continue'
alias gits='git status -s'
alias gitfa='git fetch --all'


#============================================
# CLI Augmentation
#============================================

docker() {
  if [[ $1 == "buildx" ]]; then
    command docker build \
      --build-arg http_proxy=${http_proxy} \
      --build-arg https_proxy=${http_proxy} \
      --build-arg no_proxy=${no_proxy} \
      "${@:2}"
  elif [[ $1 == "kill-all" ]]; then
    command docker kill $(docker ps -aq)
  elif [[ $1 == "sh" ]]; then
    command docker exec -it $2 sh
  else
    command docker $@
  fi
}

jira() {
  open "https://arlive.atlassian.net/browse/${1}"
}

vs() {
  command code $@
}

archive() {
  [ ! -f $1 ] && [ ! -d $1 ] && echo "File \"$1\" doesn't exist. Unable to archive." && return
  echo "Archiving \"$1\""
  DATE="$(date +%F)"
  FUZZ="$(jot -r 1  100000 999999)"
  FILENAME="$(basename $1)-$DATE-$FUZZ"
  NEWPATH="~/.ARCHIVE/$FILENAME"
  mv "$1" "$NEWPATH"
  echo "Archived to $NEWPATH"
}

#============================================
# Utility Methods
#============================================

aws_sso_login() {
  select AWS_ACCOUNT in $(aws configure list-profiles)
  do
    export AWS_PROFILE=$AWS_ACCOUNT
    aws sso login --profile $AWS_PROFILE
    aws sts get-caller-identity
    break
  done
}

# Check if a program exists
program_exists() {
  command -v "$1" >/dev/null 2>&1 ;
}

without_proxy() {
  http_proxy= https_proxy= all_proxy= no_proxy= $@
}

clear_proxy() {
  unset http_proxy
  unset https_proxy
  unset all_proxy
  unset no_proxy
}

proxy_all() {
  no_proxy= $@
}

vdiff() {
  diff -r \
    --exclude="node_modules" \
    --exclude=".git" \
    --exclude=".DS_Store" \
    $@
}

playground() {
  echo "Preparing Workspace. Deleting previous playground..."
  sleep 3
  archive ~/Code/.playground > /dev/null
  mkdir ~/Code/.playground
  cd ~/Code/.playground
}

wp() {
  lsof -i tcp:$1
}
