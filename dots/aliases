#!/bin/zsh

#============================================
# General
#============================================
alias ..='cd ..'
alias c='clear'
alias cd..='cd ..'
alias code='cd ~/Code'
alias tcode='cd ~/Tom/Code'
alias dbuild='docker-compose build'
alias ddown='docker-compose down'
alias dots='cd ~/.dotfiles'
alias dup='docker-compose up --remove-orphans'
alias fuck='sudo $(fc -ln -1)'
alias lm='ls -GlhF --color --group-directories-first'
alias ll='lm -a'
alias ls='gls'
alias ovim='/usr/local/bin/vim'
alias rust-musl-nightly='docker run --rm -it -v "$(pwd)":/home/rust/src ekidd/rust-musl-builder:nightly'
alias serve='python -m SimpleHTTPServer'
alias src='source ~/.zshrc'
alias tmn='tmux attach || tmux -u new -s Tomdizzle'
alias tmux='tmux -u -2'
alias tml='tmux new-session -s Tomdizzle1'
alias tmr='tmux attach -t Tomdizzle2 || tmux new-session -t Tomdizzle1 -s Tomdizzle2'
alias toml-script='toml_script'
alias v='nvim'
alias vend='cd $SOURCE_DIR'
alias vim='nvim'


#============================================
# AWS
#============================================
alias aws-docker-login='$(aws ecr get-login --no-include-email --region ap-southeast-2)'


#============================================
# Git
#============================================
alias gita='git add'
alias gitaa='git add -A'
alias gitb='git rev-parse --abbrev-ref HEAD'
alias gitc='git commit -m'
alias gitca='git commit --amend'
alias gitcb='git checkout -b'
alias gitd='git diff'
alias gitdw='git diff -w'
alias gitl='git log --oneline'
alias gitp='git push'
alias gitpb='git push -u origin $(gitb)'
alias gitpl='git pull --rebase'
alias gits='git status -s'
alias gitct='git checkout-ticket'


#============================================
# Todoist
#============================================
alias tda='todoist add'
alias tdai='todoist add -P 178908924'
alias tdl='todoist list'
alias tds='todoist sync'


#============================================
# CLI Augmentations
#============================================

docker() {
  if [[ $1 == "buildx" ]]; then
    command docker build \
      --build-arg http_proxy=${http_proxy} \
      --build-arg https_proxy=${http_proxy} \
      --build-arg no_proxy=${no_proxy} \
      "${@:2}"
  elif [[ $1 == "sh" ]]; then
    command docker run -it $2 sh
  else
    command docker "$@"
  fi
}

git() {
  if [[ $1 == "clonem" ]]; then
    command git clone "${GIT_BASE_PATH}/$2.git"
  elif [[ $1 == "checkout-ticket" ]]; then
    command git checkout -b `toml-script create-jira-branch-name $2`
  elif [[ $1 == "show-conflicts" ]]; then
    command git diff --name-only --diff-filter=U
  else
    command git $@
  fi
}

tdaa() {
  tda "$*"
}

vs() {
  command code $@
}

archive() {
  FILENAME=$(date +"%FT%H%M%z")-$1
  mv $1 ~/.CODE_ARCHIVE/$FILENAME
}

#============================================
# Utility Methods
#============================================

# Check if a program exists
program_exists() {
  command -v "$1" >/dev/null 2>&1 ;
}

# Run a node script in my scripts folder
# fpath=( $HOME/.dotfiles/completions fpath )
toml_script() {
  node -r $HOME/.dotfiles/scripts/src/global.js $HOME/.dotfiles/scripts/src/$@
}

without_proxy() {
  http_proxy= https_proxy= all_proxy= no_proxy= $@
}

clear_proxy() {
  unset http_proxy
  unset https_proxy
  unset all_proxy
  unset no_proxy
}

proxy_all() {
  no_proxy= $@
}
